import telebot
from telebot import types
from crud import generate_random_string, create_user, get_user_by_img, check_user, get_all, get_random_user, check_use, create_used, get_used_us, del_viewed, check_correct_tags
from sqlalchemy.orm import sessionmaker
from db import engine


bot = telebot.TeleBot('6051674846:AAEHKq9wv6Hw9jp-WkwtoZUETjfAdKSlcGE')


session = sessionmaker(bind=engine)
s = session()


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    prog = types.KeyboardButton(text='–ü–æ–µ—Ö–∞–ª–∏! üöÄüöÄüöÄ') # –ö–Ω–æ–ø–∫–∞ –ü–æ–µ—Ö–∞–ª–∏, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    markup.add(prog)
    # –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –±–æ—Ç–µ
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è {message.from_user.first_name} –≤ —á–∞—Ç-–±–æ—Ç–µ TeamFinder\n \n–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –Ω–∞–π—Ç–∏ —Å–µ–±–µ –∫–æ–º–∞–Ω–¥—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ö–∞–∫–∞—Ç–æ–Ω–∞—Ö, –∫–æ–Ω–∫—É—Ä—Å–∞—Ö –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤\n\n –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏ –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –º—ã —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–∞–º–æ–≥–æ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: )\n\n–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ /help', reply_markup=markup)


@bot.message_handler(content_types = ['text', 'photo'])
def main(message):
    
    

    if message.text == '–ü–æ–µ—Ö–∞–ª–∏! üöÄüöÄüöÄ':
            user={}
            c_u = check_user(s, message.from_user.id) # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if c_u:
                r_k = types.ReplyKeyboardRemove()
                
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                prog = types.KeyboardButton(text='–ò–°–ö–ê–¢–¨ üîé')
                markup.add(prog)
                bot.send_message(message.chat.id, '–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!', reply_markup = r_k)
                bot.send_message(message.chat.id, '–ù–æ –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –∏—Å–∫–∞—Ç—å', reply_markup = markup)
            else:
                user['telid'] = message.from_user.id
                user['username'] = message.from_user.username

                r_k = types.ReplyKeyboardRemove()
                msg_1 = bot.send_message(message.chat.id, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç (–°–Ω–∞—á–∞–ª–∞ –≤–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é, –ø–æ—Ç–æ–º –∏–º—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)?', reply_markup = r_k)
                bot.register_next_step_handler(msg_1, name_handler, user)
    elif message.text == "–ò–°–ö–ê–¢–¨ üîé":
        c_u = check_user(s, message.from_user.id) # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        if c_u:

            users = get_all(s) # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö
            last = False
            while True: # –≤ —Ü–∏–∫–ª–µ –∂–¥–µ–º –ø–æ–∫–∞ –≤—ã–ø–∞–¥–µ—Ç —Ä–∞–Ω–¥–æ–º–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—â–µ –Ω–µ –±—ã–ª–æ( –≤—Å—è –∏–Ω—Ñ–∞ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –±–¥ )
                user = get_random_user(users)
                markup = types.InlineKeyboardMarkup()
                button1 = types.InlineKeyboardButton("–û–ë–©–ê–¢–¨–°–Ø!", url=f'https://t.me/{user["username"]}')# –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–ª–µ—è
                print(user['name'])
                if not(check_use(s, message.from_user.id,user['telid'])):
                    create_used(s, user['telid'], message.from_user.id)
                    markup.add(button1)
                    if len(users) == get_used_us(s, message.from_user.id):
                        last=True
                    break
                elif len(users) == get_used_us(s, message.from_user.id):
                    break
            print(get_used_us(s, message.from_user.id))
            if len(users) == get_used_us(s, message.from_user.id) and not(last): # –ï—Å–ª–∏ –∫–æ–ª-–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–≤–Ω–æ –∫–æ–ª-–≤—É –≤—Å–µ—Ö, –∑–Ω–∞—á–∏—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã
                markup_1 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                prog_1 = types.KeyboardButton(text='–ü–ï–†–ï–°–ú–û–¢–†–ï–¢–¨ üîÑ')
                markup_1.add(prog_1)
                bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å, —Ç—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª –≤—Å–µ—Ö. –í–µ—Ä–Ω–∏—Å—å —á—É—Ç—å –ø–æ–∑–∂–µ \n\n –ù–æ –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö –µ—â–µ —Ä–∞–∑, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –ü–ï–†–ï–°–ú–û–¢–†–ï–¢–¨, –ø–æ—Ç–æ–º —É —Ç–µ–±—è –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –ò–°–ö–ê–¢–¨, –∏ —Ç—ã —Å–º–æ–∂–µ—à—å —Å–Ω–æ–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', reply_markup=markup_1)

            else:
                bot.send_photo(message.chat.id, photo=open(user['name_img'], 'rb'))
                bot.send_message(message.chat.id, f"{user['name']}\n\n–°—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: {user['sphere']}\n\n–£—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ: {user['ed_name']}\n\n{user['event_descr']}\n\n", reply_markup = markup)
        else: 
            bot.send_message(message.chat.id, '–¢—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω! –ù–æ –Ω–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é, –Ω–∞–∂–∞–≤ –ü–û–ï–•–ê–õ–ò') # –í—ã–≤–æ–¥–∏–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∞–Ω
    elif  message.text == '–ü–ï–†–ï–°–ú–û–¢–†–ï–¢–¨ üîÑ':
        del_viewed(s, message.from_user.id)
        markup_2 = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        pro = types.KeyboardButton(text='–ò–°–ö–ê–¢–¨ üîé')
        markup_2.add(pro)
        bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Ç—ã –º–æ–∂–µ—à—å —Å–Ω–æ–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π!', reply_markup = markup_2)

def name_handler(message, user):
    name = message.text
    user['name'] = name
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    it_button = types.KeyboardButton(text='IT')
    dis_button = types.KeyboardButton(text='–î–∏–∑–∞–π–Ω')
    inj_button = types.KeyboardButton(text='–ò–Ω–∂–µ–Ω–µ—Ä–∏—è')
    gur_button = types.KeyboardButton(text='–ñ—É—Ä–Ω–∞–ª–∏—Å—Ç–∏–∫–∞')
    vol_button = types.KeyboardButton(text='–í–æ–ª–æ–Ω—Ç–µ—Ä')
    markup.add(it_button, dis_button, inj_button, gur_button, vol_button)
    msg_1 = bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ —Å—Ñ–µ—Ä—É —Å–≤–æ–µ–π —É–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç–∏', reply_markup=markup)
    bot.register_next_step_handler(msg_1, sphere_handler, user)


def sphere_handler(message, user):
    markup = types.ReplyKeyboardRemove()
    sphere = message.text
    user['sphere'] = sphere
    msg_2 = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è( —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞, —à–∫–æ–ª—ã, –∫–æ–ª–µ–¥–∂–∞ )?', reply_markup=markup)
    bot.register_next_step_handler(msg_2, educate_handler, user)


def educate_handler(message, user):
    ed_name = message.text
    user['ed_name'] = ed_name
    msg_3 = bot.send_message(message.chat.id, '–û–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç, –∫–æ–Ω–∫—É—Ä—Å, —Ö–∞–∫–∞—Ç–æ–Ω, –∫—É–¥–∞ –≤—ã –∏—â–∏—Ç–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞')
    bot.register_next_step_handler(msg_3, event_handler, user)


def event_handler(message, user):
    event_descr = message.text
    user['event_descr'] = event_descr
    msg_4 = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Ö—ç—à—Ç–µ–≥–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –Ω–∞–º –Ω–∞–π—Ç–∏ –≤–∞–º –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ \n\n –ü—Ä–∏–º–µ—Ä: #–ö–æ–Ω–∫—É—Ä—Å–û—Ç–†–æ—Å–ê—Ç–æ–º–∞ #–î–µ–ª–∞–π–¥–æ–±—Ä–æ')
    bot.register_next_step_handler(msg_4, hash_tag_handler, user)                     
    
    

def hash_tag_handler(message, user):
    hashes = message.text
    if check_correct_tags(hashes):

        user['hashes'] = hashes
        msg_5 = bot.send_message(message.chat.id, '–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –∑–∞–≥—Ä—É–∑–∏ —Å–≤–æ—é —Ñ–æ—Ç–∫—É!')
        bot.register_next_step_handler(msg_5, add_photo, user)
    else:
        msg_n = bot.send_message(message.chat.id, '–ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ –≤–≤–µ–¥–µ–Ω—ã —Ö—ç—à—Ç–µ–≥–∏, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        bot.register_next_step_handler(msg_n, hash_tag_handler, user)


def add_photo(message, user):
    if message.content_type == 'photo':
        while True:
            random_name = generate_random_string(16)
            if get_user_by_img(s, f'static/{random_name}.jpg') is None:
                break
        fileID = message.photo[-1].file_id
        file_info = bot.get_file(fileID)
        downloaded_file = bot.download_file(file_info.file_path)
        user['name_img'] = f'static/{random_name}.jpg'
        with open(f"static/{random_name}.jpg", 'wb') as new_file:
            new_file.write(downloaded_file)
        print(user)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        random_button = types.KeyboardButton(text='–†–ê–ù–î–û–ú')
        hash_button = types.KeyboardButton(text='–ü–æ —Ö—ç—à—Ç–µ–≥–∞–º')
        sphere_button = types.KeyboardButton(text='–ü–æ —Å—Ñ–µ—Ä–µ')
        markup.add(random_button, hash_button, sphere_button)
        msg_6 = bot.send_message(message.chat.id, f"–¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à—ë–ª —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥ - –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤, –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å, –∫–∞–∫ –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å!", reply_markup=markup)
        bot.register_next_step_handler(msg_6, choose_find_handler, user)
    else:
        msg8 = bot.send_message(message.chat.id, f"–¢—ã –æ—Ç–ø—Ä–∞–≤–∏–ª —á—Ç–æ-—Ç–æ, –Ω–æ —è–≤–Ω–æ –Ω–µ —Ñ–æ—Ç–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ : )")
        bot.register_next_step_handler(msg8, add_photo, user)


def choose_find_handler(message, user):
    choose_find = message.text
    user['choose_find'] = choose_find
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    prog = types.KeyboardButton(text='–ò–°–ö–ê–¢–¨ üîé')
    markup.add(prog)
    create_user(s, user) # –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    bot.send_message(message.chat.id, f"–û—Ç–ª–∏—á–Ω–æ!!! –ú–æ–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å –ø–æ–∏—Å–∫!", reply_markup=markup)


bot.polling(none_stop=True) # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç
